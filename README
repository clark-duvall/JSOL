JSOL: JavaScript Object Language

JSOL is an interpreted language represented by JSON. Since any JSOL program
is completely written in JSON, it is very serializable. This allows for easy
passing of complete programs between applications.


Features

 - Closures
 - First class functions
 - string list, number, and function types
 - fully representable in JSON.


Syntax

 - '{"a": 5}'                                            -> assignment
 - '"add": {...}'                                        -> function definition
 - '["add", "a", "b", "a"]'                              -> function call
 - '{"lit": "hello"}'                                    -> string literal
 - '{"lit": [1, 2, 3]}'                                  -> list literal
 - '["for", <exp>, <cond>, <exp>,                        |
       [...]                                             |
    ]'                                                   -> for loop
 - '["if", <cond>, [...], "elif", <cond>, [...], "else", |
       [...]                                             |
    ]'                                                   -> if/else


Examples

The examples/ directory has some example programs.
Run examples by typing 'jsol.py examples/<name_of_example>'

   - fib.jsol - outputs the Fibonacci sequence using a closure
   - main.jsol - example of all the language elements


Testing

Run tests by typing 'jsol.py test_data/<name_of_test>'


Future

 - Better error handling/messages.
 - Dictionary type?
 - Hopefully, the interpreter will be ported to a variety of languages.
